// to test short warmup period
// set warm up period like below
// warmUp[100] = 901 // 30m ~
// warmUp[70] = 301  // 10m ~ 30m
// warmUp[50] = 151  // 5m ~ 10m
// warmUp[30] = 1    // ~ 5m

package staker

import (
	"std"
	"testing"
	"time"

	"gno.land/r/gnoswap/consts"

	en "gno.land/r/gnoswap/emission"
	pl "gno.land/r/gnoswap/pool"
	pn "gno.land/r/gnoswap/position"

	"gno.land/r/gnoswap/gnft"
	"gno.land/r/gnoswap/gns"

	"gno.land/r/onbloc/bar"
	"gno.land/r/onbloc/baz"
	"gno.land/r/onbloc/qux"
)

func init() {
	// init pool tiers
	// tier 1
	delete(poolTiers, MUST_EXISTS_IN_TIER_1)

	poolTiers["gno.land/r/onbloc/bar:gno.land/r/onbloc/qux:100"] = InternalTier{
		tier:           1,
		startTimestamp: time.Now().Unix(),
		startHeight:    std.GetHeight(),
		updateHeight:   std.GetHeight(),
	}

	std.TestSkipHeights(1)
}

func TestDoulbeMint(t *testing.T) {
	en.MintAndDistributeGns()
	en.MintAndDistributeGns()

	std.TestSkipHeights(1)
}

func TestPoolInitCreatePool(t *testing.T) {

	std.TestSetOrigCaller(gsa)
	std.TestSetRealm(gsaRealm)

	gns.Approve(a2u(consts.POOL_ADDR), pl.GetPoolCreationFee()*3)

	pl.CreatePool(barPath, quxPath, 100, "79228162514264337593543950337")
	pl.CreatePool(barPath, bazPath, 3000, "79228162514264337593543950337")

	std.TestSkipHeights(1)
}

func TestMintBarQux100_1(t *testing.T) {
	curr := getCurrentInfo()

	std.TestSetOrigCaller(gsa)
	std.TestSetRealm(gsaRealm)

	bar.Approve(a2u(consts.POOL_ADDR), consts.UINT64_MAX)
	qux.Approve(a2u(consts.POOL_ADDR), consts.UINT64_MAX)

	tokenId, liquidity, amount0, amount1 := pn.Mint(
		barPath,      // token0
		quxPath,      // token1
		fee100,       // fee
		int32(-1000), // tickLower
		int32(1000),  // tickUpper
		"50",         // amount0Desired
		"50",         // amount1Desired
		"1",          // amount0Min
		"1",          // amount1Min
		max_timeout,
		gsa.String(),
	)

	shouldEQ(t, tokenId, 1)
	shouldEQ(t, gnft.OwnerOf(tid(tokenId)), std.GetOrigCaller()) // gsa

	gpi := GetPrintInfo()
	shouldEQ(t, gpi, `{"height":126,"time":1234567905,"gns":{"staker":0,"devOps":8561643,"communityPool":2140410,"xGNS":0,"protocolFee":232106164,"GnoswapAdmin":99999800000000},"pool":[{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/qux:100","startTimestamp":1234567890,"tier":1,"numPoolSameTier":1,"poolReward":0,"position":[]}]}`)
	println()
	printInfo(curr)

	std.TestSkipHeights(1)
}

func TestMintBarBaz100_2(t *testing.T) {
	curr := getCurrentInfo()

	std.TestSetOrigCaller(gsa)
	std.TestSetRealm(gsaRealm)

	bar.Approve(a2u(consts.POOL_ADDR), consts.UINT64_MAX)
	baz.Approve(a2u(consts.POOL_ADDR), consts.UINT64_MAX)

	tokenId, liquidity, amount0, amount1 := pn.Mint(
		barPath,      // token0
		bazPath,      // token1
		fee3000,      // fee
		int32(-1020), // tickLower
		int32(1020),  // tickUpper
		"50",         // amount0Desired
		"50",         // amount1Desired
		"1",          // amount0Min
		"1",          // amount1Min
		max_timeout,
		gsa.String(),
	)

	shouldEQ(t, tokenId, 2)
	shouldEQ(t, gnft.OwnerOf(tid(tokenId)), std.GetOrigCaller()) // gsa

	gpi := GetPrintInfo()
	shouldEQ(t, gpi, `{"height":127,"time":1234567910,"gns":{"staker":0,"devOps":11415524,"communityPool":2853880,"xGNS":0,"protocolFee":242808219,"GnoswapAdmin":99999800000000},"pool":[{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/qux:100","startTimestamp":1234567890,"tier":1,"numPoolSameTier":1,"poolReward":0,"position":[]}]}`)
	println()
	printInfo(curr)

	std.TestSkipHeights(1)
}

func TestSkip100Height(t *testing.T) {
	curr := getCurrentInfo()

	std.TestSkipHeights(100)

	gpi := GetPrintInfo()
	shouldEQ(t, gpi, `{"height":228,"time":1234568415,"gns":{"staker":0,"devOps":299657525,"communityPool":74914380,"xGNS":0,"protocolFee":1323715724,"GnoswapAdmin":99999800000000},"pool":[{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/qux:100","startTimestamp":1234567890,"tier":1,"numPoolSameTier":1,"poolReward":0,"position":[]}]}`)
	println()
	printInfo(curr)

	std.TestSkipHeights(1)
}

func TestStakeToken_1(t *testing.T) {
	curr := getCurrentInfo()

	std.TestSetOrigCaller(gsa)
	std.TestSetRealm(gsaRealm)

	gnft.Approve(a2u(GetOrigPkgAddr()), tid(1))
	StakeToken(1)

	gpi := GetPrintInfo()
	shouldEQ(t, gpi, `{"height":229,"time":1234568420,"gns":{"staker":0,"devOps":302511406,"communityPool":75627850,"xGNS":0,"protocolFee":1334417779,"GnoswapAdmin":99999800000000},"pool":[{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/qux:100","startTimestamp":1234567890,"tier":1,"numPoolSameTier":1,"poolReward":0,"position":[{"lpTokenId":1,"stakedHeight":229,"stakedTimestamp":1234568420,"stakedDuration":0,"fullAmount":0,"ratio":0,"warmUpAmount":0,"full30":0,"give30":0,"full50":0,"give50":0,"full70":0,"give70":0,"full100":0,"give100":0}]}]}`)
	println()
	printInfo(curr)

	std.TestSkipHeights(1)
}

func TestSetPoolTier(t *testing.T) {
	curr := getCurrentInfo()

	std.TestSkipHeights(100) // this reward should go to bar:qux:100

	std.TestSetOrigCaller(gsa)
	std.TestSetRealm(gsaRealm)
	SetPoolTier("gno.land/r/onbloc/bar:gno.land/r/onbloc/baz:3000", 2)

	gpi := GetPrintInfo()
	shouldEQ(t, gpi, `{"height":330,"time":1234568925,"gns":{"staker":1080907505,"devOps":590753407,"communityPool":147688350,"xGNS":0,"protocolFee":1334417779,"GnoswapAdmin":99999800000000},"pool":[{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/qux:100","startTimestamp":1234567890,"tier":1,"numPoolSameTier":1,"poolReward":1080907505,"position":[{"lpTokenId":1,"stakedHeight":229,"stakedTimestamp":1234568420,"stakedDuration":101,"fullAmount":1080907504,"ratio":30,"warmUpAmount":324272251,"full30":1080907504,"give30":324272251,"full50":0,"give50":0,"full70":0,"give70":0,"full100":0,"give100":0}]},{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/baz:3000","startTimestamp":1234568925,"tier":2,"numPoolSameTier":1,"poolReward":0,"position":[]}]}`)
	println()
	printInfo(curr)

	std.TestSkipHeights(1)
}

func TestStakeToken_2(t *testing.T) {
	curr := getCurrentInfo()

	std.TestSetOrigCaller(gsa)
	std.TestSetRealm(gsaRealm)

	gnft.Approve(a2u(GetOrigPkgAddr()), tid(2))
	StakeToken(2)

	gpi := GetPrintInfo()
	shouldEQ(t, gpi, `{"height":331,"time":1234568930,"gns":{"staker":1088398944,"devOps":593607288,"communityPool":148401820,"xGNS":0,"protocolFee":1337628395,"GnoswapAdmin":99999800000000},"pool":[{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/qux:100","startTimestamp":1234567890,"tier":1,"numPoolSameTier":1,"poolReward":1088398943,"position":[{"lpTokenId":1,"stakedHeight":229,"stakedTimestamp":1234568420,"stakedDuration":102,"fullAmount":1088398942,"ratio":30,"warmUpAmount":326519682,"full30":1088398942,"give30":326519682,"full50":0,"give50":0,"full70":0,"give70":0,"full100":0,"give100":0}]},{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/baz:3000","startTimestamp":1234568925,"tier":2,"numPoolSameTier":1,"poolReward":0,"position":[{"lpTokenId":2,"stakedHeight":331,"stakedTimestamp":1234568930,"stakedDuration":0,"fullAmount":0,"ratio":0,"warmUpAmount":0,"full30":0,"give30":0,"full50":0,"give50":0,"full70":0,"give70":0,"full100":0,"give100":0}]}]}`)
	println()
	printInfo(curr)

	std.TestSkipHeights(1)
}

func TestNow(t *testing.T) {
	curr := getCurrentInfo()

	std.TestSetOrigCaller(gsa)
	std.TestSetRealm(gsaRealm)

	gpi := GetPrintInfo()
	shouldEQ(t, gpi, `{"height":332,"time":1234568935,"gns":{"staker":1099100999,"devOps":596461169,"communityPool":149115290,"xGNS":0,"protocolFee":1337628395,"GnoswapAdmin":99999800000000},"pool":[{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/qux:100","startTimestamp":1234567890,"tier":1,"numPoolSameTier":1,"poolReward":1095890381,"position":[{"lpTokenId":1,"stakedHeight":229,"stakedTimestamp":1234568420,"stakedDuration":103,"fullAmount":1095890380,"ratio":30,"warmUpAmount":328767113,"full30":1095890380,"give30":328767113,"full50":0,"give50":0,"full70":0,"give70":0,"full100":0,"give100":0}]},{"poolPath":"gno.land/r/onbloc/bar:gno.land/r/onbloc/baz:3000","startTimestamp":1234568925,"tier":2,"numPoolSameTier":1,"poolReward":3210616,"position":[{"lpTokenId":2,"stakedHeight":331,"stakedTimestamp":1234568930,"stakedDuration":1,"fullAmount":3210616,"ratio":30,"warmUpAmount":963184,"full30":3210616,"give30":963184,"full50":0,"give50":0,"full70":0,"give70":0,"full100":0,"give100":0}]}]}`)
	println()
	printInfo(curr)
}
