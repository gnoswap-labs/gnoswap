name: run-test

on:
  pull_request:
    branches:
      - main

env:
  GO_VERSION: "1.22"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4

      - name: Generate test matrix
        id: set-matrix
        run: |
          chmod +x .github/scripts/generate_matrix.rb
          echo "matrix=$(ruby .github/scripts/generate_matrix.rb contract)" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Check out gno
        uses: actions/checkout@v4
        with:
          repository: gnolang/gno
          # TODO: change to `master` when the interrealm issue is fixed
          ref: a3bffb2eb311cc27c419b519146a9906b5a82dba
          path: ./gno

      - name: Config gnovm
        run: |
          sed -i 's/ctx.Timestamp += (count \* 5)/ctx.Timestamp += (count \* 2)/g' ./gno/gnovm/tests/stdlibs/std/std.go

      - name: Cache gno installation
        id: cache-gno
        uses: actions/cache@v4
        with:
          path: |
            ~/go/bin/gno
            ~/go/pkg/mod/cache
          key: ${{ runner.os }}-gno-${{ hashFiles('./gno/**') }}

      - name: Install gno
        if: steps.cache-gno.outputs.cache-hit != 'true'
        run: |
          cd gno
          make install.gno

  test-gnoswap:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}

    steps:
      - name: Check out gnoswap repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Restore gno installation
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/go/bin/gno
            ~/go/pkg/mod/cache
          key: ${{ runner.os }}-gno-${{ hashFiles('./gno/**') }}

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Checkout gnoswap(main)
        uses: actions/checkout@v4
        with:
          path: ./tmp/gnoswap

      - name: Run setup.py
        run: |
          cd tmp/gnoswap
          python3 setup.py -w /home/runner/work/gnoswap/gnoswap

      - name: "Run tests for ${{ matrix.name }}"
        run: |
          chmod +x .github/scripts/run_tests.rb
          ruby .github/scripts/run_tests.rb \
            -f "${{ matrix.folder }}" \
            -r "/home/runner/work/gnoswap/gnoswap/gno"

  test-txtar:
    runs-on: ubuntu-latest
    needs: [setup, test-gnoswap]
    steps:
      - name: Check out gnoswap repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Restore gno installation
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/go/bin/gno
            ~/go/pkg/mod/cache
          key: ${{ runner.os }}-gno-${{ hashFiles('./gno/**') }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4

      - name: Run txtar tests
        run: |
          chmod +x .github/scripts/run_txtar_tests.rb
          ruby .github/scripts/run_txtar_tests.rb \
            -s "/home/runner/work/gnoswap/gnoswap" \
            -g "/home/runner/work/gnoswap/gnoswap/gno"