package gns

import (
	"testing"

	"std"
)

func TestEmissionAmount(t *testing.T) {
	shouldEQ(t, amountToEmission, uint64(900_000_000_000_000))

	sumAmount := uint64(0)
	for _, amountYearly := range halvingYearAmount {
		sumAmount += uint64(amountYearly)
	}
	shouldEQ(t, sumAmount, amountToEmission)

	ghi := GetHalvingInfo()
	shouldEQ(t, ghi, `{"height":123,"timestamp":1234567890,"avgBlockTimeMs":2000,"halvings":[{"year":1,"block":15768123,"amount":14269406},{"year":2,"block":31536123,"amount":14269406},{"year":3,"block":47304123,"amount":7134703},{"year":4,"block":63072123,"amount":7134703},{"year":5,"block":78840123,"amount":3567351},{"year":6,"block":94608123,"amount":3567351},{"year":7,"block":110376123,"amount":1783675},{"year":8,"block":126144123,"amount":1783675},{"year":9,"block":141912123,"amount":891837},{"year":10,"block":157680123,"amount":891837},{"year":11,"block":173448123,"amount":891837},{"year":12,"block":189216123,"amount":891837}]}`)
}

func TestSkip50Block(t *testing.T) {
	std.TestSkipHeights(50)
	shouldEQ(t, std.GetHeight(), int64(173)) // 123 + 50

	std.TestSetRealm(emissionRealm)

	Mint(emissionUsers) // 14269406 * 50
	shouldEQ(t, TotalMinted(), uint64(713470300))

	ghi := GetHalvingInfo()
	shouldEQ(t, ghi, `{"height":173,"timestamp":1234567990,"avgBlockTimeMs":2000,"halvings":[{"year":1,"block":15768123,"amount":14269406},{"year":2,"block":31536123,"amount":14269406},{"year":3,"block":47304123,"amount":7134703},{"year":4,"block":63072123,"amount":7134703},{"year":5,"block":78840123,"amount":3567351},{"year":6,"block":94608123,"amount":3567351},{"year":7,"block":110376123,"amount":1783675},{"year":8,"block":126144123,"amount":1783675},{"year":9,"block":141912123,"amount":891837},{"year":10,"block":157680123,"amount":891837},{"year":11,"block":173448123,"amount":891837},{"year":12,"block":189216123,"amount":891837}]}`)
}

// Assume block time is 4s = 4000ms
func TestSetAvgBlockTimeInMsTo4s(t *testing.T) {
	// for block time 2s
	shouldEQ(t, amountPerBlockPerHalvingYear[1], uint64(14269406))
	shouldEQ(t, halvingYearBlock[1], int64(15768123))

	std.TestSetRealm(gsaRealm)
	SetAvgBlockTimeInMs(4000)
	std.TestSkipHeights(1)

	std.TestSetRealm(emissionRealm)
	Mint(emissionUsers)                                    // 28538812
	shouldEQ(t, TotalMinted(), uint64(713470300+28538812)) // 742009112

	// for block time 4s
	// amount == 28538812
	shouldEQ(t, amountPerBlockPerHalvingYear[1], uint64(28538812))
	shouldEQ(t, halvingYearBlock[1], int64(7884148))
	// formula
	// orig_start = 123
	// orig_1year = 15768123 ( 123 + 1 year block 15768000 )

	// 50 block mined from L#20
	// current = 173
	// 15768123 - 173 = 15767950 // number of block left to next halving

	// 15767950 * 2 = 31535900 // number of timestamp left to next halving
	// 31535900 / 4 = 7883975 // based on 4s block, number of block left to next halving
	// current(173) + above left(7883975) = 7884148

	ghi := GetHalvingInfo()
	shouldEQ(t, ghi, `{"height":174,"timestamp":1234567992,"avgBlockTimeMs":4000,"halvings":[{"year":1,"block":7884148,"amount":28538812},{"year":2,"block":15768148,"amount":14269406},{"year":3,"block":23652148,"amount":7134703},{"year":4,"block":31536148,"amount":7134703},{"year":5,"block":39420148,"amount":3567351},{"year":6,"block":47304148,"amount":3567351},{"year":7,"block":55188148,"amount":1783675},{"year":8,"block":63072148,"amount":1783675},{"year":9,"block":70956148,"amount":891837},{"year":10,"block":78840148,"amount":891837},{"year":11,"block":86724148,"amount":891837},{"year":12,"block":94608148,"amount":891837}]}`)
}

func TestReachHalfOfFirstHalving(t *testing.T) {
	// current := 173
	// nextHalving := 7884148
	// 7884148 - 173 = 7883975
	// 7883975 / 2 = 3941987.5

	std.TestSkipHeights(3941987)
	std.TestSetRealm(emissionRealm)
	Mint(emissionUsers)
	shouldEQ(t, TotalMinted(), uint64(112500367908556))

	year := GetHalvingYearByHeight(std.GetHeight())
	shouldEQ(t, year, int64(1))

	amount := GetAmountByHeight(std.GetHeight())
	shouldEQ(t, amount, uint64(28538812))

	shouldEQ(t, std.GetHeight(), int64(3942161))

	println("halvingYearMintAmount[1]: #1\t", halvingYearMintAmount[1])

	ghi := GetHalvingInfo()
	shouldEQ(t, ghi, `{"height":3942161,"timestamp":1242451966,"avgBlockTimeMs":4000,"halvings":[{"year":1,"block":7884148,"amount":28538812},{"year":2,"block":15768148,"amount":14269406},{"year":3,"block":23652148,"amount":7134703},{"year":4,"block":31536148,"amount":7134703},{"year":5,"block":39420148,"amount":3567351},{"year":6,"block":47304148,"amount":3567351},{"year":7,"block":55188148,"amount":1783675},{"year":8,"block":63072148,"amount":1783675},{"year":9,"block":70956148,"amount":891837},{"year":10,"block":78840148,"amount":891837},{"year":11,"block":86724148,"amount":891837},{"year":12,"block":94608148,"amount":891837}]}`)
}

func TestSetAvgBlockTimeInMsTo3s(t *testing.T) {
	std.TestSetRealm(gsaRealm)
	SetAvgBlockTimeInMs(3000) // 3s
	std.TestSkipHeights(1)

	shouldEQ(t, std.GetHeight(), int64(3942162))

	std.TestSetRealm(emissionRealm)
	Mint(emissionUsers)
	shouldEQ(t, TotalMinted(), uint64(112500382177962))

	ghi := GetHalvingInfo()
	shouldEQ(t, ghi, `{"height":3942162,"timestamp":1242451968,"avgBlockTimeMs":3000,"halvings":[{"year":1,"block":11826135,"amount":14269406},{"year":2,"block":22338135,"amount":14269406},{"year":3,"block":32850135,"amount":7134703},{"year":4,"block":43362135,"amount":7134703},{"year":5,"block":53874135,"amount":3567351},{"year":6,"block":64386135,"amount":3567351},{"year":7,"block":74898135,"amount":1783675},{"year":8,"block":85410135,"amount":1783675},{"year":9,"block":95922135,"amount":891837},{"year":10,"block":106434135,"amount":891837},{"year":11,"block":116946135,"amount":891837},{"year":12,"block":127458135,"amount":891837}]}`)
}

func TestReachFirstHalving(t *testing.T) {
	shouldEQ(t, halvingYearBlock[1], int64(11826135))

	std.TestSkipHeights(7883972) // 11826135-3942162-1
	std.TestSetRealm(emissionRealm)
	Mint(emissionUsers)
	shouldEQ(t, TotalMinted(), uint64(224999979538594))

	year := GetHalvingYearByHeight(std.GetHeight())
	shouldEQ(t, year, int64(1))

	amount := GetAmountByHeight(std.GetHeight())
	shouldEQ(t, amount, uint64(14269406))

	shouldEQ(t, std.GetHeight(), int64(11826134))

	println("halvingYearMintAmount[1]: #1\t", halvingYearMintAmount[1])

	ghi := GetHalvingInfo()
	shouldEQ(t, ghi, `{"height":11826134,"timestamp":1258219912,"avgBlockTimeMs":3000,"halvings":[{"year":1,"block":11826135,"amount":14269406},{"year":2,"block":22338135,"amount":14269406},{"year":3,"block":32850135,"amount":7134703},{"year":4,"block":43362135,"amount":7134703},{"year":5,"block":53874135,"amount":3567351},{"year":6,"block":64386135,"amount":3567351},{"year":7,"block":74898135,"amount":1783675},{"year":8,"block":85410135,"amount":1783675},{"year":9,"block":95922135,"amount":891837},{"year":10,"block":106434135,"amount":891837},{"year":11,"block":116946135,"amount":891837},{"year":12,"block":127458135,"amount":891837}]}`)
}

func TestReachFirstHalvingOneMore(t *testing.T) {
	std.TestSkipHeights(1)
	std.TestSetRealm(emissionRealm)
	Mint(emissionUsers)
	shouldEQ(t, TotalMinted(), uint64(225000000000000))

	year := GetHalvingYearByHeight(std.GetHeight())
	shouldEQ(t, year, int64(1))
	shouldEQ(t, std.GetHeight(), int64(11826135))

	println("halvingYearMintAmount[1]: #2\t", halvingYearMintAmount[1])

	ghi := GetHalvingInfo()
	shouldEQ(t, ghi, `{"height":11826135,"timestamp":1258219914,"avgBlockTimeMs":3000,"halvings":[{"year":1,"block":11826135,"amount":14269406},{"year":2,"block":22338135,"amount":14269406},{"year":3,"block":32850135,"amount":7134703},{"year":4,"block":43362135,"amount":7134703},{"year":5,"block":53874135,"amount":3567351},{"year":6,"block":64386135,"amount":3567351},{"year":7,"block":74898135,"amount":1783675},{"year":8,"block":85410135,"amount":1783675},{"year":9,"block":95922135,"amount":891837},{"year":10,"block":106434135,"amount":891837},{"year":11,"block":116946135,"amount":891837},{"year":12,"block":127458135,"amount":891837}]}`)
}

func TestReachFirstHalvingOneMoreMore(t *testing.T) {
	std.TestSkipHeights(1)
	std.TestSetRealm(emissionRealm)
	Mint(emissionUsers)
	shouldEQ(t, TotalMinted(), uint64(225000014269406))

	year := GetHalvingYearByHeight(std.GetHeight())
	shouldEQ(t, year, int64(2))
	shouldEQ(t, std.GetHeight(), int64(11826136))

	amount := GetAmountByHeight(std.GetHeight())
	shouldEQ(t, amount, uint64(14269406))

	println("halvingYearMintAmount[2]:\t", halvingYearMintAmount[2])

	ghi := GetHalvingInfo()
	shouldEQ(t, ghi, `{"height":11826136,"timestamp":1258219916,"avgBlockTimeMs":3000,"halvings":[{"year":1,"block":11826135,"amount":14269406},{"year":2,"block":22338135,"amount":14269406},{"year":3,"block":32850135,"amount":7134703},{"year":4,"block":43362135,"amount":7134703},{"year":5,"block":53874135,"amount":3567351},{"year":6,"block":64386135,"amount":3567351},{"year":7,"block":74898135,"amount":1783675},{"year":8,"block":85410135,"amount":1783675},{"year":9,"block":95922135,"amount":891837},{"year":10,"block":106434135,"amount":891837},{"year":11,"block":116946135,"amount":891837},{"year":12,"block":127458135,"amount":891837}]}`)
}
