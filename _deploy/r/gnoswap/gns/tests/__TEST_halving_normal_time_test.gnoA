package gns

import (
	"std"
	"testing"
)

func TestEmissionAmount(t *testing.T) {
	shouldEQ(t, amountToEmission, 900_000_000_000_000)

	sumAmount := uint64(0)
	for _, amountYearly := range halvingTierAmount {
		sumAmount += uint64(amountYearly)
	}
	shouldEQ(t, sumAmount, amountToEmission)
}

func TestGetHalvingTier(t *testing.T) {
	height := std.GetHeight()

	// year 1
	shouldEQ(t, GetHalvingTierByBlock(height+1), 1)
	shouldEQ(t, GetHalvingTierByBlock(height+15768000), 1)

	// year 2
	shouldEQ(t, GetHalvingTierByBlock(height+15768000+1), 2)
	shouldEQ(t, GetHalvingTierByBlock(height+31536000), 2)

	// year 3
	shouldEQ(t, GetHalvingTierByBlock(height+31536000+1), 3)
	shouldEQ(t, GetHalvingTierByBlock(height+47304000), 3)

	// year 4
	shouldEQ(t, GetHalvingTierByBlock(height+47304000+1), 4)
	shouldEQ(t, GetHalvingTierByBlock(height+63072000), 4)

	// year 5
	shouldEQ(t, GetHalvingTierByBlock(height+63072000+1), 5)
	shouldEQ(t, GetHalvingTierByBlock(height+78840000), 5)

	// year 6
	shouldEQ(t, GetHalvingTierByBlock(height+78840000+1), 6)
	shouldEQ(t, GetHalvingTierByBlock(height+94608000), 6)

	// year 7
	shouldEQ(t, GetHalvingTierByBlock(height+94608000+1), 7)
	shouldEQ(t, GetHalvingTierByBlock(height+110376000), 7)

	// year 8
	shouldEQ(t, GetHalvingTierByBlock(height+110376000+1), 8)
	shouldEQ(t, GetHalvingTierByBlock(height+126144000), 8)

	// year 9
	shouldEQ(t, GetHalvingTierByBlock(height+126144000+1), 9)
	shouldEQ(t, GetHalvingTierByBlock(height+141912000), 9)

	// year 10
	shouldEQ(t, GetHalvingTierByBlock(height+141912000+1), 10)
	shouldEQ(t, GetHalvingTierByBlock(height+157680000), 10)

	// year 11
	shouldEQ(t, GetHalvingTierByBlock(height+157680000+1), 11)
	shouldEQ(t, GetHalvingTierByBlock(height+173448000), 11)

	// year 12
	shouldEQ(t, GetHalvingTierByBlock(height+173448000+1), 12)
	shouldEQ(t, GetHalvingTierByBlock(height+189216000), 12)

	// emission end
	shouldEQ(t, GetHalvingTierByBlock(height+189216000+1), 0)
}

func TestGetAmountByHeight(t *testing.T) {
	height1y := int64(15768000)

	// year 1
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 14_269_406) // per block, 24h ≈ 616_438_339_200
	std.TestSkipHeights(height1y)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 14_269_406)

	// year 2
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 14_269_406)
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 14_269_406)

	// year 3
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 7_134_703) // per block, 24h ≈ 308_219_169_600
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 7_134_703)

	// year 4
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 7_134_703)
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 7_134_703)

	// year 5
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 3_567_351) // per block, 24h ≈ 154_109_563_200
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 3_567_351)

	// year 6
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 3_567_351)
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 3_567_351)

	// year 7
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 1_783_675) // per block, 24h ≈ 77_054_760_000
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 1_783_675)

	// year 8
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 1_783_675)
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 1_783_675)

	// year 9
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 891_837) // per block, 24h ≈ 38_527_358_400
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 891_837)

	// year 10
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 891_837)
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 891_837)

	// year 11
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 891_837)
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 891_837)

	// year 12
	std.TestSkipHeights(1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 891_837)
	std.TestSkipHeights(height1y - 1)
	shouldEQ(t, GetAmountByHeight(std.GetHeight()), 891_837)
}

func shouldPanic(t *testing.T, f func()) {
	defer func() {
		if r := recover(); r == nil {
			t.Errorf("expected panic")
		}
	}()
	f()
}

func shouldPanicWithMsg(t *testing.T, f func(), msg string) {
	defer func() {
		if r := recover(); r == nil {
			t.Errorf("The code did not panic")
		} else {
			if r != msg {
				t.Errorf("excepted panic(%v), got(%v)", msg, r)
			}
		}
	}()
	f()
}
