package router

import (
	"std"
	"testing"
	"time"

	"gno.land/p/demo/uassert"

	"gno.land/p/gnoswap/consts"

	pl "gno.land/r/gnoswap/v1/pool"
	pn "gno.land/r/gnoswap/v1/position"

	"gno.land/r/onbloc/bar"
	"gno.land/r/onbloc/baz"

	"gno.land/r/gnoswap/v1/gns"
)

const (
	barbaz500 = "gno.land/r/onbloc/bar:gno.land/r/onbloc/baz:500"
	bazbar500 = "gno.land/r/onbloc/baz:gno.land/r/onbloc/bar:500"
)

func TestSwapRoute_1route_1hop(t *testing.T) {
	testing.SetRealm(adminRealm)

	gns.Approve(poolAddr, pl.GetPoolCreationFee())
	pl.CreatePool(barPath, bazPath, fee500, "130621891405341611593710811006") // tick =  10_000, ratio = 2.71814592682522526700950038502924144268035888671875

	bar.Approve(poolAddr, 36790)
	baz.Approve(poolAddr, 100000)

	// Mint
	positionId, liquidity, amount0, amount1 := pn.Mint(barPath, bazPath, fee500, int32(9000), int32(11000), "100000", "100000", "0", "0", max_timeout, adminAddr, adminAddr, "")

	uassert.Equal(t, positionId, uint64(1))
	uassert.Equal(t, amount0, "36790")
	uassert.Equal(t, amount1, "100000")

	_, dryResult, _ := DrySwapRoute(
		barPath,
		bazPath,
		"1000",
		"EXACT_IN",
		barbaz500,
		"100",
		"1",
	)

	uassert.Equal(t, dryResult, "2711")

	bar.Approve(poolAddr, uint64(1000))
	baz.Approve(routerAddr, consts.UINT64_MAX) // ITS FOR 0.15% fee

	amountIn, amountOut := ExactInSwapRoute(
		barPath,
		bazPath,
		"1000",
		barbaz500,
		"100",
		"2700",
		time.Now().Add(time.Hour).Unix(),
		"", // referrer
	)

	uassert.Equal(t, amountIn, "1000")
	uassert.Equal(t, amountOut, "-2707")

	bar.Approve(poolAddr, uint64(1000))
	baz.Approve(routerAddr, consts.UINT64_MAX) // ITS FOR 0.15% fee

	amountIn, amountOut = ExactOutSwapRoute(
		barPath,
		bazPath,
		"1000",
		barbaz500,
		"100",
		"371",
		time.Now().Add(time.Hour).Unix(),
		"", // referrer
	)

	uassert.Equal(t, amountIn, "371")
	uassert.Equal(t, amountOut, "-999")

	baz.Approve(poolAddr, consts.UINT64_MAX)
	bar.Approve(routerAddr, consts.UINT64_MAX) // ITS FOR 0.15% fee

	amountIn, amountOut = ExactInSwapRoute(
		bazPath,
		barPath,
		"1000",
		bazbar500,
		"100",
		"360",
		time.Now().Add(time.Hour).Unix(),
		"", // referrer
	)

	uassert.Equal(t, amountIn, "1000")
	uassert.Equal(t, amountOut, "-368")

	bar.Approve(routerAddr, consts.UINT64_MAX)

	amountIn, amountOut = ExactOutSwapRoute(
		bazPath,
		barPath,
		"3000",
		bazbar500,
		"100",
		"8200",
		time.Now().Add(time.Hour).Unix(),
		"", // referrer
	)

	uassert.Equal(t, amountIn, "8171")
	uassert.Equal(t, amountOut, "-2996")
}
