package emission

import (
	"std"
	"testing"

	"gno.land/r/demo/gns"
)

func Test_mintGns(t *testing.T) {
	shouldEQ(t, gns.TotalSupply(), 100000000000000) // GSA has
	shouldEQ(t, gnsBalance(emissionAddr), 0)

	mintGns() // 1 ~ 123 height

	shouldEQ(t, gnsBalance(emissionAddr), 4387842345)
	shouldEQ(t, gns.TotalSupply(), 100000000000000+4387842345)

	shouldEQ(t, std.GetHeight(), 123)
}

func Test_emitGns_SameBlock(t *testing.T) {
	// request mint again in same block => do not mint again
	// it may happen because single block can have multiple txs & msgs
	mintGns()
	shouldEQ(t, gns.TotalSupply(), 100000000000000+4387842345)
}

func Test_emitGns_AllAmount(t *testing.T) {
	std.TestSkipHeights(75686400 - 1)
	gns.TestSetLastMintedHeight(std.GetHeight())
	std.TestSkipHeights(1)

	mintGns()
	shouldEQ(t, gns.TotalSupply(), 100000000000000+4387842345+2229594)
	// all emission duration has been passed

	std.TestSkipHeights(1)
	mintGns() // since all emission has been done, no more minting
	shouldEQ(t, gns.TotalSupply(), 100000000000000+4387842345+2229594)
}
