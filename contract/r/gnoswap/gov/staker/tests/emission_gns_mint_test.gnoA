package staker

import (
	"std"
	"testing"

	"gno.land/p/demo/testutils"
	"gno.land/p/demo/uassert"

	"gno.land/r/gnoswap/v1/gns"
	"gno.land/r/gnoswap/v1/gov/xgns"

	"gno.land/r/gnoswap/v1/consts"
)

const minAmount = uint64(1_000_000)

var (
	dummyAddr  = testutils.TestAddress("dummy")
	dummyRealm = std.NewUserRealm(dummyAddr)
	reDelegate = testutils.TestAddress("reDelegate")
)

func TestEmission(t *testing.T) {
	initial(t)
	delegateAdmin(t)
	redelegateAdmin(t)
}

func initial(t *testing.T) {
	std.TestSetRealm(adminRealm)

	uassert.Equal(t, gns.BalanceOf(admin), uint64(100000000000000))
	uassert.Equal(t, xgns.BalanceOf(admin), uint64(0))
}

func delegateAdmin(t *testing.T) {
	// gns before emission
	uassert.Equal(t, gns.BalanceOf(consts.STAKER_ADDR), uint64(0))
	uassert.Equal(t, gns.BalanceOf(consts.DEV_OPS), uint64(0))
	uassert.Equal(t, gns.BalanceOf(consts.COMMUNITY_POOL_ADDR), uint64(0))
	uassert.Equal(t, gns.BalanceOf(consts.GOV_STAKER_ADDR), uint64(0))

	std.TestSkipHeights(1)

	std.TestSetRealm(adminRealm)
	gns.Approve(consts.GOV_STAKER_ADDR, uint64(1000001))
	Delegate(dummyAddr, 1000001)

	uassert.Equal(t, gns.BalanceOf(consts.STAKER_ADDR), uint64(10702054))
	uassert.Equal(t, gns.BalanceOf(consts.DEV_OPS), uint64(2853881))
	uassert.Equal(t, gns.BalanceOf(consts.COMMUNITY_POOL_ADDR), uint64(713470))
	uassert.Equal(t, gns.BalanceOf(consts.GOV_STAKER_ADDR), uint64(1000001))
	uassert.Equal(t, gns.BalanceOf(consts.GOV_STAKER_ADDR)-xgns.TotalSupply(), uint64(0))
}

func redelegateAdmin(t *testing.T) {
	uassert.Equal(t, delegatedFromTo[admin][dummyAddr], uint64(1000001))
	uassert.Equal(t, delegatedTo[dummyAddr], uint64(1000001))
	uassert.Equal(t, gns.BalanceOf(admin), uint64(99999998999999))
	uassert.Equal(t, xgns.BalanceOf(admin), uint64(1000001))

	std.TestSetRealm(adminRealm)
	Redelegate(dummyAddr, reDelegate, 1000001)

	uassert.Equal(t, gns.BalanceOf(admin), uint64(99999998999999))
	uassert.Equal(t, xgns.BalanceOf(admin), uint64(1000001))

	uassert.Equal(t, delegatedFromTo[admin][dummyAddr], uint64(0))
	uassert.Equal(t, delegatedTo[dummyAddr], uint64(0))

	uassert.Equal(t, delegatedFromTo[admin][reDelegate], uint64(1000001))
	uassert.Equal(t, delegatedTo[reDelegate], uint64(1000001))
}
